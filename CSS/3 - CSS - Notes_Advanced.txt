CSS
  > Advanced
    - Rounded Corners
      Border radius : used to add a corner to each corner of a box.
      Multiple values : border-top-left-radius, border-top-right-radius, border-bottom-right-radius, 
        and border-bottom-left-radius can also be used to target specific corners.
        border-radius: 6px 12px 18px 24px - short hand
    
    - Shadows : shining a torch over web page
      Box Shadows : is the standard CSS property to get Shadow
        box-shadow: 5px 5px 3px 1px #999
        1 - horizontal offset — how far the shadow is nudged to the right (or left if it’s negative)
        2 - vertical offset — how far the shadow is nudged downwards (or upwards if it’s negative)
        3 - blur radius — the higher the value the less sharp the shadow. (“0” being absolutely sharp). This is optional — omitting it is equivalent of setting “0”.
        4 - spread distance — the higher the value, the larger the shadow (“0” being the inherited size of the box). This is also optional — omitting it is equivalent of setting “0”.
        5 - color. That’s optional, too.
      Inner shadow : also apply shadows to the inside of a box by adding “inset” to the list
        box-shadow: inset 0 0 7px 5px #ddd;
      Text Shadows : apply shadows to the outline of text
        text-shadow: -2px 2px 2px #999;
        1 - horizontal offset
        2 - vertical offset
        3 - blur radius (optional)
        4 - color (optional, omitting this will make the shadow the same color as the text itself)
    
    - Universal, Child, and Adjacent Selectors
      Universal Selectors (“ * ”) Select all in web page
      Child selectors (“>”) used to specify something that is a child of something
      Adjacent selectors (“+”) used to target an adjacent sibling of an element, essentially, something immediately following something

    - Advanced Colors :  CSS 3 also allows HSL — hue, saturation, and lightness and stipulating transparency.
      Alpha transparency : rgba(0,0,0,0)
        rgb takes normal 3 value but that fourth value level of transparency, “1” opaque, “0” transparent. 
      Hue, saturation, and lightness hsl(36, 100%, 50%) 
        control over the aspects of a color’s shade rather than its logical ingredients.
        Hue - 0 to 360, taken from a typical color wheel, where “0” (and “360”) is red, “120” is green and “240” is blue.
        Saturation - 0% (none, so a level of grey depending on the lightness) to 100%
        Lightness - 0% (black) to 100% (white), 50% being “normal”.
      HSLa : transparency and HSL combined hsla(0, 75%, 75%, 0.5)
    
    - At rules : encapsulate a bunch of CSS rules and apply them to something specific.
      @import : used to bolt another stylesheet onto your existing one. (@import url(morestyles.css);)
      @media : used to apply styles to a specific media, such as print.  //later explained briefly
      @font-face : for embedding fonts in a web page so that a typeface can be used even if it isn’t on user’s computer. 

    - CSS Transitions : to easily animate parts of your design without the need for the likes of JavaScript
      transition: all .5s linear 0;
        transition-property: which property (or properties) will transition.
        transition-duration: how long the transition takes.
        transition-timing-function: if the transition takes place at a constant speed or if it accelerates and decelerates.
        transition-delay: how long to wait until the transition takes place.
    
    - CSS Backgrounds : 
      Multiple backgrounds : multiple background images to a single box - background-image: url(this.jpg), url(that.gif), url(theother.png);
      Background size : allows you to stretch or compress a background image 
        auto : maintains the background image’s original size and width/height ratio.
        lengths : a width and a height, such as 100px 50px
        percentages : a width and a height, such as 50% 25%
        contain : original ratio and makes it as large fitting entirely within the box’s background area.
        cover : original ratio and makes it large enough to fill the entire background area
      Background origin : specifies the origin position of a background image.
        padding-box	Default value. The background image starts from the upper left corner of the padding edge	
        border-box	The background image starts from the upper left corner of the border	
        content-box	The background image starts from the upper left corner of the content
    
    - Transformations :  stretch and mold those boxes into all manner of shapes.
      Rotating : to spin - transform: rotate(-10deg);
      Skewing : to tip the horizontal and vertical - transform: skew(20deg,10deg);
      Scaling : multiply width and height, and size of everything contained in the box transform: scale(2);
      Translating : shift a box horizontally and vertically transform: translate(100px,200px);
      Matrix (rotating, skewing, scaling, and translating) - transform: matrix(2,-0.35,0.35,2,0,0);
      * Combining transformations transform: rotate(-10deg) scale(2);
      origin : the origin of the transformation - transform-origin: 0 0;

    - Gradients : Smooth dissolve from one color to another 
      Linear gradients : even spread of 2 colors, fading from one at the top to another at the bottom
        linear-gradient(yellow, red);
          Manipulate the angel : background: linear-gradient(to right, orange, red);
          One corner: background: linear-gradient(to bottom right, orange, red);
          Angle : background: linear-gradient(20deg, orange, red);
      Radial gradients : One color starting from a central point and fading to another color
        radial-gradient(yellow, green);
          specify the shape of the fade : background: radial-gradient(circle, yellow, green);   
          specify if the gradient by the sides or corners radial-gradient(circle closest-side, yellow, green);
          “closest-side”, “closest-corner”, “farthest-side” and “farthest-corner”
          specify the origin - background: radial-gradient(at top left, yellow, green);
      Repeating gradient :  “repeating-linear-gradient” to build on the color stops and, well, repeat the gradient.
        background: repeating-linear-gradient(white, black 15px, white 30px);

    - Media Queries :  enabling you to specify different design choices depending on screen size
      Browser-size specific CSS :  can screen-based media be targeted, screen-based media of a certain size can be targeted as well
      Orientation-specific CSS : @media screen and (orientation: landscape) {#nav { float: left } }
      Device-specific CSS : specify the likes of the device’s screen dimensions and its pixel ratio.
        Width and height : device-width, device-height, min-device-width, max-device-width, min-device-height and max-device-height 
          can be used to target the computed resolution of a device 
          @media screen and (min-device-height: 768px) and (max-device-width: 1024px) {}
        Pixel ratio : CSS pixel need not be the same as a physical pixel. While a screen may physically be 720 pixels wide, 
          a browser may actually apply CSS assuming that it is 480 pixels wide  
          @media (device-pixel-ratio: 2){}
      Other : @media screen and (resolution: 326dpi) { /* */ }
              @media screen and (min-resolution: 96dpi) { /* */ }
              @media screen and (device-aspect-ratio: 16/9) { /* */ }